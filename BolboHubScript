local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Tworzenie głównego okna Rayfield
local Window = Rayfield:CreateWindow({
   Name = "Bolbo Hub | Pets GO",
   LoadingTitle = "Pets GO",
   LoadingSubtitle = "Loading Bolbo Hub",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = BolboHubConfig,
      FileName = "BolboHub"
   },
   Discord = {
      Enabled = false,
      Invite = "https://discord.gg/pYbWUaAwc2",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Key | Bolbo Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "BolboHubKey",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {"https://pastebin.com/raw/DJiY26CD"}
   }
})

local MainTab = Window:CreateTab("Main", nil)
local MainSection = MainTab:CreateSection("Automatically")

-- Flaga kontrolująca automatyczne rollowanie
local AutoRollEnabled = false

-- Funkcja automatycznego rollowania
local function StartAutoRoll()
    while AutoRollEnabled do
        game:GetService("ReplicatedStorage").Network.Eggs_Roll:InvokeServer()
        print("Wykonano roll!")
        wait(0.3) -- Opóźnienie między kolejnymi rollami
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego rollowania
local Toggle = MainTab:CreateToggle({
   Name = "Auto Roll",
   CurrentValue = false,
   Flag = "auto roll",
   Callback = function(Value)
       if Value then
           AutoRollEnabled = true
           StartAutoRoll()
       else
           AutoRollEnabled = false
       end
   end,
})

local toggle = false

-- Funkcja do farmienia monet
local function autoFarmCoins()
    while toggle do
        local pets = {}
        local breakable

        -- Pobierz wszystkie zwierzęta z workspace
        for _, pet in ipairs(game.Workspace.__THINGS.Pets:GetChildren()) do
            if pet.Name ~= "Highlight" then
                table.insert(pets, pet.Name)
            end
        end

        -- Wybierz pierwszy dostępny breakable
        for _, b in ipairs(game.Workspace.__THINGS.Breakables:GetChildren()) do
            if b.Name ~= "Highlight" then
                breakable = b.Name
                break
            end
        end

        -- Jeśli znaleziono zwierzęta i breakable
        if #pets > 0 and breakable then
            local args = {[1] = {}}
            for _, petId in ipairs(pets) do
                args[1][petId] = tonumber(breakable)
            end

            -- Wysyłanie żądania do serwera
            game:GetService("ReplicatedStorage").Network.Breakables_JoinPetBulk:FireServer(unpack(args))
        else
            warn("Any Breakable or Pet not found")
        end

        wait(1) -- Czas odczekania między kolejnymi akcjami
    end
end

-- Przełącznik Auto Farm Coins
local Toggle = MainTab:CreateToggle({
   Name = "Auto Farm Coins",
   CurrentValue = false,
   Flag = "autofarmcoins",
   Callback = function(Value)
        toggle = Value
        if toggle then
            print("Auto Farm Coins OFF")
            coroutine.wrap(autoFarmCoins)() -- Uruchomienie farmienia w oddzielnym wątku
        else
            print("Auto Farm Coins ON")
        end
   end,
})

-- Lista pozycji do teleportacji
local teleportPositions = {
    Vector3.new(-0.433927, 3.18971, -80.6408),
    Vector3.new(84.2124, 3.18971, 3.21052),
    Vector3.new(14.9268, 3.18971, 119.81),
    Vector3.new(-57.3481, 3.18971, 50.2463),
}

local toggleTeleport = false

local function autoTeleport()
    while toggleTeleport do
        for _, position in ipairs(teleportPositions) do
            -- Teleportacja gracza do określonej pozycji
            local player = game.Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
            end
            wait(10) -- Czekaj 10 sekund przed kolejną teleportacją
            if not toggleTeleport then break end -- Jeśli toggle wyłączony, przerwij pętlę
        end
    end
end

-- Przełącznik w GUI
local Toggle = MainTab:CreateToggle({
   Name = "Auto Collect Coins",
   CurrentValue = false,
   Flag = "autoteleport",
   Callback = function(Value)
        toggleTeleport = Value
        if toggleTeleport then
            print("Auto Teleport ON")
            coroutine.wrap(autoTeleport)() -- Uruchom w osobnym wątku
        else
            print("Auto Teleport OFF")
        end
   end,
})


-- Flaga kontrolująca pętlę teleportacji
local monitoring = false

local Toggle = MainTab:CreateToggle({
   Name = "Auto Fish",
   CurrentValue = false,
   Flag = "autofish",
   Callback = function(Value)
       local targetPosition = Vector3.new(-204.566, 2.07661, 206.916)
       local player = game.Players.LocalPlayer

       -- Funkcja do teleportowania gracza
       local function teleportToTarget()
           if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
               player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
           end
       end

       -- Pętla monitorująca pozycję gracza
       if Value then
           monitoring = true
           task.spawn(function()
               while monitoring do
                   local currentPosition = player.Character.HumanoidRootPart.Position
                   local distance = (currentPosition - targetPosition).Magnitude

                   -- Jeśli gracz jest oddalony o więcej niż 5 jednostek, teleportuj go
                   if distance > 5 then
                       teleportToTarget()
                   end
                   task.wait(1) -- Sprawdzanie co 1 sekundę
               end
           end)
       else
           monitoring = false -- Zatrzymujemy pętlę, jeśli toggle jest wyłączone
       end
   end,
})

local ShopTab = Window:CreateTab("Shop", nil)
local ShopSection = ShopTab:CreateSection("Auto Buy")

-- Flaga kontrolująca działanie automatycznego vending machine
local AutoVendingMachineEnabled = false

-- Argumenty dla vending machine
local args = {
    [1] = "PotionVendingMachine"
}

-- Funkcja automatycznego działania
local function StartAutoVendingMachine()
    while AutoVendingMachineEnabled do
        game:GetService("ReplicatedStorage").Network.VendingMachines_Purchase:InvokeServer(unpack(args))
        print("Zakupiono przedmiot!")
        wait(1) -- Opóźnienie między kolejnymi zakupami
    end
end

-- Dodanie toggle do włączania/wyłączania funkcji
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Buy VendingMachine",
   CurrentValue = false,
   Flag = "autoVendingMachine",
   Callback = function(Value)
       if Value then
           AutoVendingMachineEnabled = true
           StartAutoVendingMachine()
       else
           AutoVendingMachineEnabled = false
       end
   end,
})

-- Flaga kontrolująca automatyczne zakupy u merchantów
local AutoMerchantEnabled = false

-- Funkcja automatycznego zakupu od merchantów
local function StartAutoMerchant()
    while AutoMerchantEnabled do
        for i = 1, 5 do
            local args = {
                [1] = "StandardMerchant",
                [2] = i
            }
            game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args))
            print("Zakupiono od StandardMerchant - numer: " .. i)
            wait(1) -- Opóźnienie między kolejnymi zakupami
        end
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego zakupu u merchantów
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Merchant",
   CurrentValue = false,
   Flag = "auto merchant",
   Callback = function(Value)
       if Value then
           AutoMerchantEnabled = true
           StartAutoMerchant()
       else
           AutoMerchantEnabled = false
       end
   end,
})

-- Flaga kontrolująca automatyczne działanie
local AutoFishingMerchantEnabled = false

-- Funkcja automatycznego zakupu u FishingMerchant
local function StartAutoFishingMerchant()
    while AutoFishingMerchantEnabled do
        -- Zakup 1
        local args1 = {
            [1] = "FishingMerchant",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args1))
        print("Zakupiono od FishingMerchant - numer: 1")

        -- Zakup 2
        local args2 = {
            [1] = "FishingMerchant",
            [2] = 2
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args2))
        print("Zakupiono od FishingMerchant - numer: 2")

        -- Zakup 3
        local args3 = {
            [1] = "FishingMerchant",
            [2] = 3
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args3))
        print("Zakupiono od FishingMerchant - numer: 3")

        -- Zakup 4
        local args4 = {
            [1] = "FishingMerchant",
            [2] = 4
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args4))
        print("Zakupiono od FishingMerchant - numer: 4")

        -- Zakup 5
        local args5 = {
            [1] = "FishingMerchant",
            [2] = 5
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args5))
        print("Zakupiono od FishingMerchant - numer: 5")

        -- Zakup 6
        local args6 = {
            [1] = "FishingMerchant",
            [2] = 6
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args6))
        print("Zakupiono od FishingMerchant - numer: 6")

        -- Opóźnienie przed kolejnym cyklem
        wait(1)
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego zakupu u FishingMerchant
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Fishing Merchant",
   CurrentValue = false,
   Flag = "auto fishing merchant",
   Callback = function(Value)
       if Value then
           AutoFishingMerchantEnabled = true
           StartAutoFishingMerchant()
       else
           AutoFishingMerchantEnabled = false
       end
   end,
})

local MiscTab = Window:CreateTab("Misc", nil) -- Title, Image
local MiscSection = MainTab:CreateSection("Misc")

local ToggleClaim = MiscTab:CreateToggle({
   Name = "Auto Claim Forever Pack",
   CurrentValue = false,
   Flag = "autoclaimforeverpack",
   Callback = function(Value)
        toggleClaim = Value
        if toggleClaim then
            print("Auto Claim Forever Pack OFF")
            coroutine.wrap(autoClaimForeverPack)() -- Uruchomienie odbierania paczek w oddzielnym wątku
        else
            print("Auto Claim Forever Pack ON")
        end
   end,
})

-- Przełącznik Auto Claim Bonus Rolls
local toggleBonus = false

local function autoClaimBonusRolls()
    while toggleBonus do
        local args = {}

        -- Wysyłanie żądania do serwera
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Retention Dice: Claim"):FireServer()
        wait(10) -- Co 10 sekund
    end
end

local ToggleBonus = MiscTab:CreateToggle({
   Name = "Auto Claim Bonus Rolls",
   CurrentValue = false,
   Flag = "autoclaimbonusrolls",
   Callback = function(Value)
        toggleBonus = Value
        if toggleBonus then
            print("Auto Claim Bonus Rolls OFF")
            coroutine.wrap(autoClaimBonusRolls)() -- Uruchomienie w oddzielnym wątku
        else
            print("Auto Claim Bonus Rolls ON")
        end
   end,
})
