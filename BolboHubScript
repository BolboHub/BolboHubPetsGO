local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Tworzenie głównego okna Rayfield
local Window = Rayfield:CreateWindow({
   Name = "Bolbo Hub | Pets GO",
   LoadingTitle = "Pets GO",
   LoadingSubtitle = "Loading Bolbo Hub",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Bolbo Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Key | Bolbo Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "BolboHubKey",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {"https://pastebin.com/raw/DJiY26CD"}
   }
})

local MainTab = Window:CreateTab("Main", nil)
local MainSection = MainTab:CreateSection("Roll")

-- Flaga kontrolująca automatyczne rollowanie
local AutoRollEnabled = false

-- Funkcja automatycznego rollowania
local function StartAutoRoll()
    while AutoRollEnabled do
        game:GetService("ReplicatedStorage").Network.Eggs_Roll:InvokeServer()
        print("Wykonano roll!")
        wait(0.3) -- Opóźnienie między kolejnymi rollami
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego rollowania
local Toggle = MainTab:CreateToggle({
   Name = "Auto Roll",
   CurrentValue = false,
   Flag = "auto roll",
   Callback = function(Value)
       if Value then
           AutoRollEnabled = true
           StartAutoRoll()
       else
           AutoRollEnabled = false
       end
   end,
})

local Toggle = MainTab:CreateToggle({
    Name = "Auto Farm Coins", 
    CurrentValue = false,
    Flag = "autofarmcoins",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        
        -- Funkcja teleportacji i klikania
        local function teleportAndClick(thing)
            -- Sprawdzanie, czy model nie ma nazwy "Highlight"
            if thing.Name ~= "Highlight" then
                -- Teleportacja gracza na pozycję modelu
                character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(thing.Position)
                task.wait(0.1)  -- Czekanie 0.1 sekundy przed kliknięciem
                -- Kliknięcie na model (tutaj można dodać odpowiednią akcję, np. "Click")
                -- Można dodać coś w stylu:
                -- fireclickdetector(thing:FindFirstChildOfClass("ClickDetector"))
                
                -- Czekanie na zniknięcie modelu
                while thing and thing.Parent do
                    task.wait(0.5)  -- Sprawdzanie co 0.5 sekundy
                end
            end
        end
        
        -- Funkcja do sprawdzania dostępnych Breakables
        local function findBreakables()
            while Value do
                -- Sprawdzanie wszystkich modeli w Breakables
                for _, thing in pairs(game.Workspace.__THINGS.Breakables:GetChildren()) do
                    -- Przeszukiwanie Breakables, ignorując modele z nazwą "Highlight"
                    if thing:IsA("Model") and thing.Name ~= "Highlight" then
                        teleportAndClick(thing)  -- Teleportowanie i klikanie
                        break  -- Zatrzymanie pętli po znalezieniu pierwszego modelu
                    end
                end
                task.wait(1)  -- Sprawdzanie co 1 sekundę
            end
        end
        
        -- Jeśli toggle jest włączone, uruchamiamy poszukiwanie i farmienie
        if Value then
            findBreakables()
        end
    end,
})


-- Flaga kontrolująca pętlę teleportacji
local monitoring = false

local Toggle = MainTab:CreateToggle({
   Name = "Auto Fish",
   CurrentValue = false,
   Flag = "autofish",
   Callback = function(Value)
       local targetPosition = Vector3.new(-204.566, 2.07661, 206.916)
       local player = game.Players.LocalPlayer

       -- Funkcja do teleportowania gracza
       local function teleportToTarget()
           if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
               player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
           end
       end

       -- Pętla monitorująca pozycję gracza
       if Value then
           monitoring = true
           task.spawn(function()
               while monitoring do
                   local currentPosition = player.Character.HumanoidRootPart.Position
                   local distance = (currentPosition - targetPosition).Magnitude

                   -- Jeśli gracz jest oddalony o więcej niż 5 jednostek, teleportuj go
                   if distance > 5 then
                       teleportToTarget()
                   end
                   task.wait(1) -- Sprawdzanie co 1 sekundę
               end
           end)
       else
           monitoring = false -- Zatrzymujemy pętlę, jeśli toggle jest wyłączone
       end
   end,
})

local ShopTab = Window:CreateTab("Shop", nil)
local ShopSection = ShopTab:CreateSection("Vending Machine")

-- Flaga kontrolująca działanie automatycznego vending machine
local AutoVendingMachineEnabled = false

-- Argumenty dla vending machine
local args = {
    [1] = "PotionVendingMachine"
}

-- Funkcja automatycznego działania
local function StartAutoVendingMachine()
    while AutoVendingMachineEnabled do
        game:GetService("ReplicatedStorage").Network.VendingMachines_Purchase:InvokeServer(unpack(args))
        print("Zakupiono przedmiot!")
        wait(1) -- Opóźnienie między kolejnymi zakupami
    end
end

-- Dodanie toggle do włączania/wyłączania funkcji
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Buy VendingMachine",
   CurrentValue = false,
   Flag = "autoVendingMachine",
   Callback = function(Value)
       if Value then
           AutoVendingMachineEnabled = true
           StartAutoVendingMachine()
       else
           AutoVendingMachineEnabled = false
       end
   end,
})

local ShopSection = ShopTab:CreateSection("Auto Buy Merchant")

-- Flaga kontrolująca automatyczne zakupy u merchantów
local AutoMerchantEnabled = false

-- Funkcja automatycznego zakupu od merchantów
local function StartAutoMerchant()
    while AutoMerchantEnabled do
        for i = 1, 5 do
            local args = {
                [1] = "StandardMerchant",
                [2] = i
            }
            game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args))
            print("Zakupiono od StandardMerchant - numer: " .. i)
            wait(1) -- Opóźnienie między kolejnymi zakupami
        end
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego zakupu u merchantów
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Merchant",
   CurrentValue = false,
   Flag = "auto merchant",
   Callback = function(Value)
       if Value then
           AutoMerchantEnabled = true
           StartAutoMerchant()
       else
           AutoMerchantEnabled = false
       end
   end,
})

local ShopSection = ShopTab:CreateSection("Auto Buy Fish Merchant")

-- Flaga kontrolująca automatyczne działanie
local AutoFishingMerchantEnabled = false

-- Funkcja automatycznego zakupu u FishingMerchant
local function StartAutoFishingMerchant()
    while AutoFishingMerchantEnabled do
        -- Zakup 1
        local args1 = {
            [1] = "FishingMerchant",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args1))
        print("Zakupiono od FishingMerchant - numer: 1")

        -- Zakup 2
        local args2 = {
            [1] = "FishingMerchant",
            [2] = 2
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args2))
        print("Zakupiono od FishingMerchant - numer: 2")

        -- Zakup 3
        local args3 = {
            [1] = "FishingMerchant",
            [2] = 3
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args3))
        print("Zakupiono od FishingMerchant - numer: 3")

        -- Zakup 4
        local args4 = {
            [1] = "FishingMerchant",
            [2] = 4
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args4))
        print("Zakupiono od FishingMerchant - numer: 4")

        -- Zakup 5
        local args5 = {
            [1] = "FishingMerchant",
            [2] = 5
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args5))
        print("Zakupiono od FishingMerchant - numer: 5")

        -- Zakup 6
        local args6 = {
            [1] = "FishingMerchant",
            [2] = 6
        }
        game:GetService("ReplicatedStorage").Network.CustomMerchants_Purchase:InvokeServer(unpack(args6))
        print("Zakupiono od FishingMerchant - numer: 6")

        -- Opóźnienie przed kolejnym cyklem
        wait(1)
    end
end

-- Dodanie toggle do włączania/wyłączania automatycznego zakupu u FishingMerchant
local Toggle = ShopTab:CreateToggle({
   Name = "Auto Fishing Merchant",
   CurrentValue = false,
   Flag = "auto fishing merchant",
   Callback = function(Value)
       if Value then
           AutoFishingMerchantEnabled = true
           StartAutoFishingMerchant()
       else
           AutoFishingMerchantEnabled = false
       end
   end,
})
